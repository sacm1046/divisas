name: Local JSON

on:
  workflow_dispatch:

jobs:
  local-json:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
        URL_BASE: ${{ vars.URL_BASE }}
        REDIS_URL: ${{ secrets.REDIS_URL }}

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Instalar dependencias
        run: npm install

      - name: Iniciar servidor Express en segundo plano
        run: npm start &

      - name: Esperar a que el servidor esté listo
        run: sleep 5

      - name: Hacer petición GET con reintentos
        run: | 
            MAX_RETRIES=${{ vars.MAX_RETRIES }}
            COUNT=0
            URL="http:/localhost:3000/currencies/json"
            RESPONSE_FILE="/tmp/response.json"

            echo "Iniciando peticiones a $URL"

            while [ $COUNT -lt $MAX_RETRIES ]; do
                STATUS_CODE=$(curl -s -o $RESPONSE_FILE -w "%{http_code}" $URL)

                if [ "$STATUS_CODE" -eq 200 ]; then
                    echo "✅ Servicio respondió con 200"
                    cat $RESPONSE_FILE  # Imprimir la respuesta JSON
                    break
                else
                    echo "⚠ Respuesta HTTP: $STATUS_CODE. Reintentando en 3s..."
                    COUNT=$((COUNT+1))
                    sleep 3
                fi
            done

            if [ "$STATUS_CODE" -ne 200 ]; then
                echo "❌ No se obtuvo respuesta 200 después de $MAX_RETRIES intentos."
                exit 1
            fi


      - name: Commit de cambios
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Actualización de db.json"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/sacm1046/divisas.git

      - name: Finalizar procesos en segundo plano
        run: kill $(lsof -t -i:3000) || true
